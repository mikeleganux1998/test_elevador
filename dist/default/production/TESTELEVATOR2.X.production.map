Microchip MPLAB XC8 Compiler V1.34 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.34\dat\en_msgs.txt -cs \
  -h+dist/default/production\TESTELEVATOR2.X.production.sym \
  --cmf=dist/default/production\TESTELEVATOR2.X.production.cmf -z -Q18F4550 \
  -oC:\Users\MIGUEL~1\AppData\Local\Temp\s6v8.6 \
  -Mdist/default/production/TESTELEVATOR2.X.production.map -E1 -ver=XC8 \
  -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0800h-08FFhx120 -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-07FFh -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init,end_init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\MIGUEL~1\AppData\Local\Temp\s6v8.obj \
  dist/default/production\TESTELEVATOR2.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\MIGUEL~1\AppData\Local\Temp\s6v8.obj
                end_init                              0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\TESTELEVATOR2.X.production.obj
                smallconst                          800      800        A      400       0
                text13                              D3A      D3A       28      405       0
                text12                              DB2      DB2        8      405       0
                text11                              DA8      DA8        A      405       0
                text10                              D7A      D7A       16      405       0
                text9                               A22      A22       F8      405       0
                text8                               D62      D62       18      405       0
                text7                               C98      C98       42      405       0
                text6                               CDA      CDA       34      405       0
                text5                               92A      92A       F8      405       0
                text4                               D9E      D9E        A      405       0
                text3                               D0E      D0E       2C      405       0
                text2                               BEE      BEE       AA      405       0
                text1                               80A      80A      120      405       0
                text0                               B1A      B1A       D4      405       0
                cstackCOMRAM                          1        1       12        1       1
                cinit                               D90      D90        E      405       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        4         0
                text13                              D3A      D3A       28         0
                text12                              DB2      DB2        8         0
                text11                              DA8      DA8        A         0
                text10                              D7A      D7A       16         0
                text9                               A22      A22       F8         0
                text8                               D62      D62       18         0
                text7                               C98      C98       42         0
                text6                               CDA      CDA       34         0
                text5                               92A      92A       F8         0
                text4                               D9E      D9E        A         0
                text3                               D0E      D0E       2C         0
                text2                               BEE      BEE       AA         0
                text1                               80A      80A      120         0
                text0                               B1A      B1A       D4         0
                cinit                               D90      D90        E         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800        A         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       12         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000012  000013         1       1  COMRAM  
                smallconst                     000800  00000A  00080A       400       0  SMALLCON
                text1                          00080A  0005B0  000DBA       405       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000013-0007FF              7ED
        CODE             000004-0007FF              7FC
                         000DBA-007FFF             7246
        COMRAM           000013-00005F               4D
        CONST            000004-0007FF              7FC
                         000DBA-007FFF             7246
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000DBA-007FFF             7246
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000DBA-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___wmul                      cstackCOMRAM 000001
_LATB                         (abs)        000F8A
_LATD                         (abs)        000F8C
_PORTAbits                    (abs)        000F80
_PORTCbits                    (abs)        000F82
_PORTDbits                    (abs)        000F83
_TRISA                        (abs)        000F92
_TRISB                        (abs)        000F93
_TRISC                        (abs)        000F94
_TRISD                        (abs)        000F95
__CFG_BOR$ON                  (abs)        000000
__CFG_BORV$3                  (abs)        000000
__CFG_CCP2MX$ON               (abs)        000000
__CFG_CPUDIV$OSC1_PLL2        (abs)        000000
__CFG_DEBUG$OFF               (abs)        000000
__CFG_FCMEN$OFF               (abs)        000000
__CFG_FOSC$HSPLL_HS           (abs)        000000
__CFG_ICPRT$OFF               (abs)        000000
__CFG_IESO$OFF                (abs)        000000
__CFG_LPT1OSC$OFF             (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_MCLRE$ON                (abs)        000000
__CFG_PBADEN$OFF              (abs)        000000
__CFG_PLLDIV$5                (abs)        000000
__CFG_PWRT$ON                 (abs)        000000
__CFG_STVREN$ON               (abs)        000000
__CFG_USBDIV$2                (abs)        000000
__CFG_VREGEN$ON               (abs)        000000
__CFG_WDT$OFF                 (abs)        000000
__CFG_WDTPS$32768             (abs)        000000
__CFG_XINST$OFF               (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbank6                      bank6        000000
__Hbank7                      bank7        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__Heeprom_data                eeprom_data  000000
__Hend_init                   end_init     000004
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000000
__Hintcode                    intcode      000000
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    000000
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      000000
__Hram                        ram          000000
__Hramtop                     ramtop       000800
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000000
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   00080A
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        000013
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000000
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext12                     text12       000000
__Htext13                     text13       000000
__Htext2                      text2        000000
__Htext3                      text3        000000
__Htext4                      text4        000000
__Htext5                      text5        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbank6                      bank6        000000
__Lbank7                      bank7        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__Leeprom_data                eeprom_data  000000
__Lend_init                   end_init     000000
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         000000
__Lintcode                    intcode      000000
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    000000
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      000000
__Lram                        ram          000000
__Lramtop                     ramtop       000800
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000800
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000000
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext12                     text12       000000
__Ltext13                     text13       000000
__Ltext2                      text2        000000
__Ltext3                      text3        000000
__Ltext4                      text4        000000
__Ltext5                      text5        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        000013
__S2                          (abs)        000000
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___param_bank                 (abs)        000010
___rparam_used                (abs)        000001
___sp                         stack        000000
___wmul                       text13       000D3A
___wmul@multiplicand          cstackCOMRAM 000003
___wmul@multiplier            cstackCOMRAM 000001
___wmul@product               cstackCOMRAM 000005
__accesstop                   (abs)        000060
__activetblptr                (abs)        000001
__end_of___wmul               text13       000D62
__end_of__initialization      cinit        000D90
__end_of_display_level        text12       000DBA
__end_of_init_leds_and_motor  text11       000DB2
__end_of_lcd_clear            text8        000D7A
__end_of_lcd_command          text9        000B1A
__end_of_lcd_data             text5        000A22
__end_of_lcd_init             text7        000CDA
__end_of_lcd_set_cursor       text6        000D0E
__end_of_lcd_strobe           text10       000D90
__end_of_lcd_write_char       text4        000DA8
__end_of_lcd_write_string     text3        000D3A
__end_of_main                 text0        000BEE
__end_of_read_keypad          text2        000C98
__end_of_step_motor           text1        00092A
__initialization              cinit        000D90
__mediumconst                 mediumconst  000000
__pcinit                      cinit        000D90
__pcstackCOMRAM               cstackCOMRAM 000001
__psmallconst                 smallconst   000800
__ptext0                      text0        000B1A
__ptext1                      text1        00080A
__ptext10                     text10       000D7A
__ptext11                     text11       000DA8
__ptext12                     text12       000DB2
__ptext13                     text13       000D3A
__ptext2                      text2        000BEE
__ptext3                      text3        000D0E
__ptext4                      text4        000D9E
__ptext5                      text5        00092A
__ptext6                      text6        000CDA
__ptext7                      text7        000C98
__ptext8                      text8        000D62
__ptext9                      text9        000A22
__ramtop                      ramtop       000800
__size_of___wmul              (abs)        000000
__size_of_display_level       (abs)        000000
__size_of_init_leds_and_motor (abs)        000000
__size_of_lcd_clear           (abs)        000000
__size_of_lcd_command         (abs)        000000
__size_of_lcd_data            (abs)        000000
__size_of_lcd_init            (abs)        000000
__size_of_lcd_set_cursor      (abs)        000000
__size_of_lcd_strobe          (abs)        000000
__size_of_lcd_write_char      (abs)        000000
__size_of_lcd_write_string    (abs)        000000
__size_of_main                (abs)        000000
__size_of_read_keypad         (abs)        000000
__size_of_step_motor          (abs)        000000
__smallconst                  smallconst   000800
_display_level                text12       000DB2
_init_leds_and_motor          text11       000DA8
_lcd_clear                    text8        000D62
_lcd_command                  text9        000A22
_lcd_data                     text5        00092A
_lcd_init                     text7        000C98
_lcd_set_cursor               text6        000CDA
_lcd_strobe                   text10       000D7A
_lcd_write_char               text4        000D9E
_lcd_write_string             text3        000D0E
_main                         text0        000B1A
_read_keypad                  text2        000BEE
_step_motor                   text1        00080A
display_level@level           cstackCOMRAM 000001
end_of_initialization         cinit        000D90
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
lcd_command@cmd               cstackCOMRAM 000003
lcd_data@data                 cstackCOMRAM 000003
lcd_set_cursor@address        cstackCOMRAM 000008
lcd_set_cursor@col            cstackCOMRAM 000006
lcd_set_cursor@row            cstackCOMRAM 000004
lcd_write_char@c              cstackCOMRAM 000004
lcd_write_string@str          cstackCOMRAM 000004
main@current_level            cstackCOMRAM 000011
main@key                      cstackCOMRAM 00000E
main@steps                    cstackCOMRAM 00000C
main@target_level             cstackCOMRAM 00000F
read_keypad@col               cstackCOMRAM 000004
read_keypad@key               cstackCOMRAM 000003
stackhi                       (abs)        0007FF
stacklo                       (abs)        000060
start                         init         000000
start_initialization          cinit        000D90
step_motor@direction          cstackCOMRAM 000004
step_motor@i                  cstackCOMRAM 000006
step_motor@steps              cstackCOMRAM 000001


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 43 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  steps           2   11[COMRAM] int 
  target_level    2   14[COMRAM] int 
  key             1   13[COMRAM] unsigned char 
  current_leve    2   16[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
		_display_level
		_init_leds_and_motor
		_lcd_clear
		_lcd_init
		_lcd_set_cursor
		_lcd_write_char
		_lcd_write_string
		_read_keypad
		_step_motor
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _step_motor *****************
 Defined at:
		line 12 in file "motor_led.c"
 Parameters:    Size  Location     Type
  steps           2    0[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2    5[COMRAM] int 
  direction       2    3[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _read_keypad *****************
 Defined at:
		line 73 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  col             2    3[COMRAM] int 
  key             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_write_string *****************
 Defined at:
		line 44 in file "lcd.c"
 Parameters:    Size  Location     Type
  str             2    3[COMRAM] PTR const unsigned char 
		 -> STR_1(8), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_data
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_write_char *****************
 Defined at:
		line 50 in file "lcd.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_data
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_data *****************
 Defined at:
		line 68 in file "lcd.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_lcd_write_string
		_lcd_write_char
 This function uses a non-reentrant model


 *************** function _lcd_set_cursor *****************
 Defined at:
		line 34 in file "lcd.c"
 Parameters:    Size  Location     Type
  row             2    3[COMRAM] int 
  col             2    5[COMRAM] int 
 Auto vars:     Size  Location     Type
  address         2    7[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_command
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 17 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_command
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_clear *****************
 Defined at:
		line 29 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_command
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_command *****************
 Defined at:
		line 54 in file "lcd.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_lcd_init
		_lcd_clear
		_lcd_set_cursor
 This function uses a non-reentrant model


 *************** function _lcd_strobe *****************
 Defined at:
		line 82 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_command
		_lcd_data
 This function uses a non-reentrant model


 *************** function _init_leds_and_motor *****************
 Defined at:
		line 5 in file "motor_led.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _display_level *****************
 Defined at:
		line 36 in file "motor_led.c"
 Parameters:    Size  Location     Type
  level           2    0[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
motor_led.c
		_display_level 		CODE           	0DB2	0000	9
		_init_leds_and_		CODE           	0DA8	0000	11
		_step_motor    		CODE           	080A	0000	289

motor_led.c estimated size: 309

shared
		__initializatio		CODE           	0D90	0000	1

shared estimated size: 1

lcd.c
		_lcd_write_char		CODE           	0D9E	0000	11
		_lcd_command   		CODE           	0A22	0000	249
		_lcd_data      		CODE           	092A	0000	249
		_lcd_set_cursor		CODE           	0CDA	0000	53
		_lcd_clear     		CODE           	0D62	0000	25
		_lcd_write_stri		CODE           	0D0E	0000	45
		_lcd_strobe    		CODE           	0D7A	0000	23
		_lcd_init      		CODE           	0C98	0000	67

lcd.c estimated size: 722

main.c
		_main          		CODE           	0B1A	0000	213
		_read_keypad   		CODE           	0BEE	0000	171

main.c estimated size: 384

C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c
		___wmul        		CODE           	0D3A	0000	41

C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c estimated size: 41

